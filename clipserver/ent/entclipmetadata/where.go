// Code generated by ent, DO NOT EDIT.

package entclipmetadata

import (
	"com.gigaboo/clipserver/ent/predicate"
	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLTE(FieldID, id))
}

// Filename applies equality check predicate on the "filename" field. It's identical to FilenameEQ.
func Filename(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldFilename, v))
}

// FileURL applies equality check predicate on the "file_url" field. It's identical to FileURLEQ.
func FileURL(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldFileURL, v))
}

// FileSize applies equality check predicate on the "file_size" field. It's identical to FileSizeEQ.
func FileSize(v int64) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldFileSize, v))
}

// Duration applies equality check predicate on the "duration" field. It's identical to DurationEQ.
func Duration(v int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldDuration, v))
}

// Format applies equality check predicate on the "format" field. It's identical to FormatEQ.
func Format(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldFormat, v))
}

// Word applies equality check predicate on the "word" field. It's identical to WordEQ.
func Word(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldWord, v))
}

// Sentence applies equality check predicate on the "sentence" field. It's identical to SentenceEQ.
func Sentence(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldSentence, v))
}

// Thumbnail applies equality check predicate on the "thumbnail" field. It's identical to ThumbnailEQ.
func Thumbnail(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldThumbnail, v))
}

// FilenameEQ applies the EQ predicate on the "filename" field.
func FilenameEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldFilename, v))
}

// FilenameNEQ applies the NEQ predicate on the "filename" field.
func FilenameNEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNEQ(FieldFilename, v))
}

// FilenameIn applies the In predicate on the "filename" field.
func FilenameIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldIn(FieldFilename, vs...))
}

// FilenameNotIn applies the NotIn predicate on the "filename" field.
func FilenameNotIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNotIn(FieldFilename, vs...))
}

// FilenameGT applies the GT predicate on the "filename" field.
func FilenameGT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGT(FieldFilename, v))
}

// FilenameGTE applies the GTE predicate on the "filename" field.
func FilenameGTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGTE(FieldFilename, v))
}

// FilenameLT applies the LT predicate on the "filename" field.
func FilenameLT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLT(FieldFilename, v))
}

// FilenameLTE applies the LTE predicate on the "filename" field.
func FilenameLTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLTE(FieldFilename, v))
}

// FilenameContains applies the Contains predicate on the "filename" field.
func FilenameContains(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContains(FieldFilename, v))
}

// FilenameHasPrefix applies the HasPrefix predicate on the "filename" field.
func FilenameHasPrefix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasPrefix(FieldFilename, v))
}

// FilenameHasSuffix applies the HasSuffix predicate on the "filename" field.
func FilenameHasSuffix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasSuffix(FieldFilename, v))
}

// FilenameEqualFold applies the EqualFold predicate on the "filename" field.
func FilenameEqualFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEqualFold(FieldFilename, v))
}

// FilenameContainsFold applies the ContainsFold predicate on the "filename" field.
func FilenameContainsFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContainsFold(FieldFilename, v))
}

// FileURLEQ applies the EQ predicate on the "file_url" field.
func FileURLEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldFileURL, v))
}

// FileURLNEQ applies the NEQ predicate on the "file_url" field.
func FileURLNEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNEQ(FieldFileURL, v))
}

// FileURLIn applies the In predicate on the "file_url" field.
func FileURLIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldIn(FieldFileURL, vs...))
}

// FileURLNotIn applies the NotIn predicate on the "file_url" field.
func FileURLNotIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNotIn(FieldFileURL, vs...))
}

// FileURLGT applies the GT predicate on the "file_url" field.
func FileURLGT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGT(FieldFileURL, v))
}

// FileURLGTE applies the GTE predicate on the "file_url" field.
func FileURLGTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGTE(FieldFileURL, v))
}

// FileURLLT applies the LT predicate on the "file_url" field.
func FileURLLT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLT(FieldFileURL, v))
}

// FileURLLTE applies the LTE predicate on the "file_url" field.
func FileURLLTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLTE(FieldFileURL, v))
}

// FileURLContains applies the Contains predicate on the "file_url" field.
func FileURLContains(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContains(FieldFileURL, v))
}

// FileURLHasPrefix applies the HasPrefix predicate on the "file_url" field.
func FileURLHasPrefix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasPrefix(FieldFileURL, v))
}

// FileURLHasSuffix applies the HasSuffix predicate on the "file_url" field.
func FileURLHasSuffix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasSuffix(FieldFileURL, v))
}

// FileURLEqualFold applies the EqualFold predicate on the "file_url" field.
func FileURLEqualFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEqualFold(FieldFileURL, v))
}

// FileURLContainsFold applies the ContainsFold predicate on the "file_url" field.
func FileURLContainsFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContainsFold(FieldFileURL, v))
}

// FileSizeEQ applies the EQ predicate on the "file_size" field.
func FileSizeEQ(v int64) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldFileSize, v))
}

// FileSizeNEQ applies the NEQ predicate on the "file_size" field.
func FileSizeNEQ(v int64) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNEQ(FieldFileSize, v))
}

// FileSizeIn applies the In predicate on the "file_size" field.
func FileSizeIn(vs ...int64) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldIn(FieldFileSize, vs...))
}

// FileSizeNotIn applies the NotIn predicate on the "file_size" field.
func FileSizeNotIn(vs ...int64) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNotIn(FieldFileSize, vs...))
}

// FileSizeGT applies the GT predicate on the "file_size" field.
func FileSizeGT(v int64) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGT(FieldFileSize, v))
}

// FileSizeGTE applies the GTE predicate on the "file_size" field.
func FileSizeGTE(v int64) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGTE(FieldFileSize, v))
}

// FileSizeLT applies the LT predicate on the "file_size" field.
func FileSizeLT(v int64) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLT(FieldFileSize, v))
}

// FileSizeLTE applies the LTE predicate on the "file_size" field.
func FileSizeLTE(v int64) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLTE(FieldFileSize, v))
}

// DurationEQ applies the EQ predicate on the "duration" field.
func DurationEQ(v int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldDuration, v))
}

// DurationNEQ applies the NEQ predicate on the "duration" field.
func DurationNEQ(v int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNEQ(FieldDuration, v))
}

// DurationIn applies the In predicate on the "duration" field.
func DurationIn(vs ...int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldIn(FieldDuration, vs...))
}

// DurationNotIn applies the NotIn predicate on the "duration" field.
func DurationNotIn(vs ...int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNotIn(FieldDuration, vs...))
}

// DurationGT applies the GT predicate on the "duration" field.
func DurationGT(v int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGT(FieldDuration, v))
}

// DurationGTE applies the GTE predicate on the "duration" field.
func DurationGTE(v int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGTE(FieldDuration, v))
}

// DurationLT applies the LT predicate on the "duration" field.
func DurationLT(v int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLT(FieldDuration, v))
}

// DurationLTE applies the LTE predicate on the "duration" field.
func DurationLTE(v int) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLTE(FieldDuration, v))
}

// FormatEQ applies the EQ predicate on the "format" field.
func FormatEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldFormat, v))
}

// FormatNEQ applies the NEQ predicate on the "format" field.
func FormatNEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNEQ(FieldFormat, v))
}

// FormatIn applies the In predicate on the "format" field.
func FormatIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldIn(FieldFormat, vs...))
}

// FormatNotIn applies the NotIn predicate on the "format" field.
func FormatNotIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNotIn(FieldFormat, vs...))
}

// FormatGT applies the GT predicate on the "format" field.
func FormatGT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGT(FieldFormat, v))
}

// FormatGTE applies the GTE predicate on the "format" field.
func FormatGTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGTE(FieldFormat, v))
}

// FormatLT applies the LT predicate on the "format" field.
func FormatLT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLT(FieldFormat, v))
}

// FormatLTE applies the LTE predicate on the "format" field.
func FormatLTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLTE(FieldFormat, v))
}

// FormatContains applies the Contains predicate on the "format" field.
func FormatContains(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContains(FieldFormat, v))
}

// FormatHasPrefix applies the HasPrefix predicate on the "format" field.
func FormatHasPrefix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasPrefix(FieldFormat, v))
}

// FormatHasSuffix applies the HasSuffix predicate on the "format" field.
func FormatHasSuffix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasSuffix(FieldFormat, v))
}

// FormatEqualFold applies the EqualFold predicate on the "format" field.
func FormatEqualFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEqualFold(FieldFormat, v))
}

// FormatContainsFold applies the ContainsFold predicate on the "format" field.
func FormatContainsFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContainsFold(FieldFormat, v))
}

// WordEQ applies the EQ predicate on the "word" field.
func WordEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldWord, v))
}

// WordNEQ applies the NEQ predicate on the "word" field.
func WordNEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNEQ(FieldWord, v))
}

// WordIn applies the In predicate on the "word" field.
func WordIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldIn(FieldWord, vs...))
}

// WordNotIn applies the NotIn predicate on the "word" field.
func WordNotIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNotIn(FieldWord, vs...))
}

// WordGT applies the GT predicate on the "word" field.
func WordGT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGT(FieldWord, v))
}

// WordGTE applies the GTE predicate on the "word" field.
func WordGTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGTE(FieldWord, v))
}

// WordLT applies the LT predicate on the "word" field.
func WordLT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLT(FieldWord, v))
}

// WordLTE applies the LTE predicate on the "word" field.
func WordLTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLTE(FieldWord, v))
}

// WordContains applies the Contains predicate on the "word" field.
func WordContains(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContains(FieldWord, v))
}

// WordHasPrefix applies the HasPrefix predicate on the "word" field.
func WordHasPrefix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasPrefix(FieldWord, v))
}

// WordHasSuffix applies the HasSuffix predicate on the "word" field.
func WordHasSuffix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasSuffix(FieldWord, v))
}

// WordEqualFold applies the EqualFold predicate on the "word" field.
func WordEqualFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEqualFold(FieldWord, v))
}

// WordContainsFold applies the ContainsFold predicate on the "word" field.
func WordContainsFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContainsFold(FieldWord, v))
}

// SentenceEQ applies the EQ predicate on the "sentence" field.
func SentenceEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldSentence, v))
}

// SentenceNEQ applies the NEQ predicate on the "sentence" field.
func SentenceNEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNEQ(FieldSentence, v))
}

// SentenceIn applies the In predicate on the "sentence" field.
func SentenceIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldIn(FieldSentence, vs...))
}

// SentenceNotIn applies the NotIn predicate on the "sentence" field.
func SentenceNotIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNotIn(FieldSentence, vs...))
}

// SentenceGT applies the GT predicate on the "sentence" field.
func SentenceGT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGT(FieldSentence, v))
}

// SentenceGTE applies the GTE predicate on the "sentence" field.
func SentenceGTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGTE(FieldSentence, v))
}

// SentenceLT applies the LT predicate on the "sentence" field.
func SentenceLT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLT(FieldSentence, v))
}

// SentenceLTE applies the LTE predicate on the "sentence" field.
func SentenceLTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLTE(FieldSentence, v))
}

// SentenceContains applies the Contains predicate on the "sentence" field.
func SentenceContains(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContains(FieldSentence, v))
}

// SentenceHasPrefix applies the HasPrefix predicate on the "sentence" field.
func SentenceHasPrefix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasPrefix(FieldSentence, v))
}

// SentenceHasSuffix applies the HasSuffix predicate on the "sentence" field.
func SentenceHasSuffix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasSuffix(FieldSentence, v))
}

// SentenceEqualFold applies the EqualFold predicate on the "sentence" field.
func SentenceEqualFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEqualFold(FieldSentence, v))
}

// SentenceContainsFold applies the ContainsFold predicate on the "sentence" field.
func SentenceContainsFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContainsFold(FieldSentence, v))
}

// ThumbnailEQ applies the EQ predicate on the "thumbnail" field.
func ThumbnailEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEQ(FieldThumbnail, v))
}

// ThumbnailNEQ applies the NEQ predicate on the "thumbnail" field.
func ThumbnailNEQ(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNEQ(FieldThumbnail, v))
}

// ThumbnailIn applies the In predicate on the "thumbnail" field.
func ThumbnailIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldIn(FieldThumbnail, vs...))
}

// ThumbnailNotIn applies the NotIn predicate on the "thumbnail" field.
func ThumbnailNotIn(vs ...string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldNotIn(FieldThumbnail, vs...))
}

// ThumbnailGT applies the GT predicate on the "thumbnail" field.
func ThumbnailGT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGT(FieldThumbnail, v))
}

// ThumbnailGTE applies the GTE predicate on the "thumbnail" field.
func ThumbnailGTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldGTE(FieldThumbnail, v))
}

// ThumbnailLT applies the LT predicate on the "thumbnail" field.
func ThumbnailLT(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLT(FieldThumbnail, v))
}

// ThumbnailLTE applies the LTE predicate on the "thumbnail" field.
func ThumbnailLTE(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldLTE(FieldThumbnail, v))
}

// ThumbnailContains applies the Contains predicate on the "thumbnail" field.
func ThumbnailContains(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContains(FieldThumbnail, v))
}

// ThumbnailHasPrefix applies the HasPrefix predicate on the "thumbnail" field.
func ThumbnailHasPrefix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasPrefix(FieldThumbnail, v))
}

// ThumbnailHasSuffix applies the HasSuffix predicate on the "thumbnail" field.
func ThumbnailHasSuffix(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldHasSuffix(FieldThumbnail, v))
}

// ThumbnailEqualFold applies the EqualFold predicate on the "thumbnail" field.
func ThumbnailEqualFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldEqualFold(FieldThumbnail, v))
}

// ThumbnailContainsFold applies the ContainsFold predicate on the "thumbnail" field.
func ThumbnailContainsFold(v string) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.FieldContainsFold(FieldThumbnail, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.EntClipMetadata) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.EntClipMetadata) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.EntClipMetadata) predicate.EntClipMetadata {
	return predicate.EntClipMetadata(sql.NotPredicates(p))
}
