schema {
  query: Query
}

directive @goField(
  forceResolver: Boolean
  name: String
  omittable: Boolean
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @goModel(
  model: String
  models: [String!]
  forceGenerate: Boolean
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor

type EntClipMetadata implements Node {
  id: ID!

  """
  剪辑文件名
  """
  filename: String!

  """
  剪辑文件访问地址
  """
  fileURL: String!

  """
  文件大小（字节）
  """
  fileSize: Int!

  """
  视频时长（秒）
  """
  duration: Int!

  """
  视频格式
  """
  format: String!
}

"""
A connection to a list of items.
"""
type EntClipMetadataConnection {
  """
  A list of edges.
  """
  edges: [EntClipMetadataEdge]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}

"""
An edge in a connection.
"""
type EntClipMetadataEdge {
  """
  The item at the end of the edge.
  """
  node: EntClipMetadata

  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}

"""
EntClipMetadataWhereInput is used for filtering EntClipMetadata objects.
Input was generated by ent.
"""
input EntClipMetadataWhereInput {
  not: EntClipMetadataWhereInput
  and: [EntClipMetadataWhereInput!]
  or: [EntClipMetadataWhereInput!]

  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID

  """
  filename field predicates
  """
  filename: String
  filenameNEQ: String
  filenameIn: [String!]
  filenameNotIn: [String!]
  filenameGT: String
  filenameGTE: String
  filenameLT: String
  filenameLTE: String
  filenameContains: String
  filenameHasPrefix: String
  filenameHasSuffix: String
  filenameEqualFold: String
  filenameContainsFold: String

  """
  file_url field predicates
  """
  fileURL: String
  fileURLNEQ: String
  fileURLIn: [String!]
  fileURLNotIn: [String!]
  fileURLGT: String
  fileURLGTE: String
  fileURLLT: String
  fileURLLTE: String
  fileURLContains: String
  fileURLHasPrefix: String
  fileURLHasSuffix: String
  fileURLEqualFold: String
  fileURLContainsFold: String

  """
  file_size field predicates
  """
  fileSize: Int
  fileSizeNEQ: Int
  fileSizeIn: [Int!]
  fileSizeNotIn: [Int!]
  fileSizeGT: Int
  fileSizeGTE: Int
  fileSizeLT: Int
  fileSizeLTE: Int

  """
  duration field predicates
  """
  duration: Int
  durationNEQ: Int
  durationIn: [Int!]
  durationNotIn: [Int!]
  durationGT: Int
  durationGTE: Int
  durationLT: Int
  durationLTE: Int

  """
  format field predicates
  """
  format: String
  formatNEQ: String
  formatIn: [String!]
  formatNotIn: [String!]
  formatGT: String
  formatGTE: String
  formatLT: String
  formatLTE: String
  formatContains: String
  formatHasPrefix: String
  formatHasSuffix: String
  formatEqualFold: String
  formatContainsFold: String
}

type EntVideoMetadata implements Node {
  id: ID!

  """
  视频原始地址
  """
  url: String!

  """
  原始文件名
  """
  filename: String!

  """
  文件大小(字节)
  """
  fileSize: Int!

  """
  文件MIME类型
  """
  contentType: String!
}

"""
A connection to a list of items.
"""
type EntVideoMetadataConnection {
  """
  A list of edges.
  """
  edges: [EntVideoMetadataEdge]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}

"""
An edge in a connection.
"""
type EntVideoMetadataEdge {
  """
  The item at the end of the edge.
  """
  node: EntVideoMetadata

  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}

"""
EntVideoMetadataWhereInput is used for filtering EntVideoMetadata objects.
Input was generated by ent.
"""
input EntVideoMetadataWhereInput {
  not: EntVideoMetadataWhereInput
  and: [EntVideoMetadataWhereInput!]
  or: [EntVideoMetadataWhereInput!]

  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID

  """
  url field predicates
  """
  url: String
  urlNEQ: String
  urlIn: [String!]
  urlNotIn: [String!]
  urlGT: String
  urlGTE: String
  urlLT: String
  urlLTE: String
  urlContains: String
  urlHasPrefix: String
  urlHasSuffix: String
  urlEqualFold: String
  urlContainsFold: String

  """
  filename field predicates
  """
  filename: String
  filenameNEQ: String
  filenameIn: [String!]
  filenameNotIn: [String!]
  filenameGT: String
  filenameGTE: String
  filenameLT: String
  filenameLTE: String
  filenameContains: String
  filenameHasPrefix: String
  filenameHasSuffix: String
  filenameEqualFold: String
  filenameContainsFold: String

  """
  file_size field predicates
  """
  fileSize: Int
  fileSizeNEQ: Int
  fileSizeIn: [Int!]
  fileSizeNotIn: [Int!]
  fileSizeGT: Int
  fileSizeGTE: Int
  fileSizeLT: Int
  fileSizeLTE: Int

  """
  content_type field predicates
  """
  contentType: String
  contentTypeNEQ: String
  contentTypeIn: [String!]
  contentTypeNotIn: [String!]
  contentTypeGT: String
  contentTypeGTE: String
  contentTypeLT: String
  contentTypeLTE: String
  contentTypeContains: String
  contentTypeHasPrefix: String
  contentTypeHasSuffix: String
  contentTypeEqualFold: String
  contentTypeContainsFold: String
}

"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC

  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}

"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}

type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  entClipMetadataSlice(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for EntClipMetadataSlice returned from the connection.
    """
    where: EntClipMetadataWhereInput
  ): EntClipMetadataConnection!
  entVideoMetadataSlice(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for EntVideoMetadataSlice returned from the connection.
    """
    where: EntVideoMetadataWhereInput
  ): EntVideoMetadataConnection!
}
